name: Publish

# Auf dem Main/Release wird ein Dockerimage gebaut und ins Artifactory/GitHub geschoben,
# wenn der Bau/Test erfolgreich war
on:
  workflow_dispatch:
  workflow_run:
    workflows: [ Build ]
    types:
      - completed
    branches: [ main, release/* ]

env:
  DOCKER_IMAGE_HUB: vzlobins/drinkpipe
jobs:
  init:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      docker_image_name_hub: ${{ env.DOCKER_IMAGE_HUB}}:${{ steps.docker_tag.outputs.tag }}
    steps:
      - name: determine docker image tag
        id: docker_tag
        run: |
          if [[ "${{github.ref}}" == "main" || "${{github.ref}}" == "refs/heads/main" ]]; then
            echo "::set-output name=tag::latest"
          else          
            echo "::set-output name=tag::${GITHUB_REF##*/}"
          fi


  dockerizex_2_hub:
    runs-on: ubuntu-latest
    needs: init
    env:
      DOCKER_BUILDKIT: 1
      DOCKER_IMAGE: ${{ needs.init.outputs.docker_image_name_hub}}
      DOCKER_IMAGE_AMD64: ${{ needs.init.outputs.docker_image_name_hub}}-linux-amd64
      DOCKER_IMAGE_ARM64: ${{ needs.init.outputs.docker_image_name_hub}}-linux-arm64
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn --batch-mode clean verify
      - name: docker build amd64
        run: |
          docker build --platform=linux/amd64 -t ${{ env.DOCKER_IMAGE_AMD64 }} .
      - name: docker build arm64
        run: |
          docker build --platform=linux/arm64 -t ${{ env.DOCKER_IMAGE_ARM64 }} .
      - name: manifestation
        run: |
          docker manifest create ${{ env.DOCKER_IMAGE }} --amend ${{ env.DOCKER_IMAGE_AMD64 }} --amend ${{ env.DOCKER_IMAGE_ARM64 }}
          docker manifest push ${{ env.DOCKER_IMAGE }}
